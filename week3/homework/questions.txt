Please Read: 
 - Chapter 6 Standard Types
 - Review Blocks
 - Chapter 7 Regular Expressions
 - Chapter 22 The Ruby Language: basic types (symbols), variables and constants

1. What is a symbol?
	In Ruby, a symbol is an identifier corresponding to a string of characters denoted by a colon proceeding the name of the symbol (eg. :symbol). Symbols are simply constant names that you don't have to pre-declare and are guaranteed to be unique. 
	
2. What is the difference between a symbol and a string?
	A symbol is always guaranteed to be unique and is reference by a string name. A symbol is not an instance of the String class.
	
3. What is a block and how do I call a block?
	A block is a closure in which it remembers the context in which it was defined and uses that context whenever it is called. Blocks are defined only immediately after a method invocation. Blocks are called using the yield keyword where parameters pass to the yield will be assigned to arguments in the block.
	
4. How do I pass a block to a method? What is the method signature?
	A block is passed into a method using do...end or {} notation.  The block is then called with yield.  Another way is to pass it as a parameter with the ampersand such as
	def calc(base, &exponent)

5. Where would you use regular expressions?
	Regular expressions are used when parsing files and data. They are especially good for find specific sequences of characters and/or patterns in the input data. Once particular sequences are found they can extracted or modified in place. 

